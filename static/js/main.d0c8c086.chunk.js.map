{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/getData.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getData","a","fetch","response","json","FindMovie","addMovie","useState","movieTitle","setMovieTitle","newMovie","setNewMovie","error","setError","findMovie","Title","Plot","Poster","imdbID","Response","onSubmit","event","preventDefault","htmlFor","onChange","e","value","target","type","id","placeholder","cn","onClick","App","state","data","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0c8c086.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=7246e96f&t=';\n\nexport const getData = async <T>(title: string): Promise<T> => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  return response.json();\n};\n","import React, { FC, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getData } from '../../api/getData';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (newMovie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null >(null);\n  const [error, setError] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setMovieTitle(value);\n  };\n\n  const findMovie = async () => {\n    const movie: MovieFromServer = await getData(movieTitle);\n    const baseMovieUrl = 'https://www.imdb.com/title/';\n\n    const {\n      Title: title,\n      Plot: description,\n      Poster: imgUrl,\n      imdbID: imdbId,\n      Response: response,\n    } = movie;\n\n    if (response === 'True') {\n      const imdbUrl = baseMovieUrl + imdbId;\n      const foundMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbId,\n        imdbUrl,\n      };\n\n      setNewMovie(foundMovie);\n      setError(false);\n    } else {\n      setNewMovie(null);\n      setError(true);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    findMovie();\n  };\n\n  const handleAdd = () => {\n    if (newMovie) {\n      addMovie(newMovie);\n    }\n\n    setNewMovie(null);\n    setMovieTitle('');\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              onChange={handleChange}\n              value={movieTitle}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': error,\n              })}\n            />\n          </div>\n\n          {error\n            ? (\n              <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n              </p>\n            ) : null}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAdd}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie\n          ? <MovieCard {...newMovie} />\n          : null}\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movies;\n}\n\nexport class App extends Component <{}, State> {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies,\n        newMovie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}